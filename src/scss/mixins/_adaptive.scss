/*
https://www.youtube.com/watch?v=hdvLnIteUoI
*/

// Проще всего использовать функции в SCSS, которые автоматически вычислят среднее значение.

// Пример функции для размеров в rem
@function adaptive_rem($min, $width, $max) {
  $min_rem: #{$min + rem};
  $max_rem: #{$max + rem};
  $width_vw: #{calc(round(($max * 16) / ($width / 100) * 100000) / 100000) + vw};

  @return clamp($min_rem, $width_vw, $max_rem);
}

/*
Пример подключения функции, если максимальный шрифт 2rem, минимальный 1.5rem и он должен уменьшаться, когда разрешение экрана меньше 600px
font-size: clm_rem(1.5, 600, 2);
*/

// Пример функции для размеров в px
@function adaptive_px($min, $width, $max) {
  $min_px: #{$min + px};
  $max_px: #{$max + px};
  $width_vw: #{calc(round($max / ($width / 100) * 100000) / 100000) + vw};

  @return clamp($min_px, $width_vw, $max_px);
}

/*
Подключаем функцию для уменьшения отступов в блоке. Максимальный отступ 30px, минимальный 20px. Отступ должен уменьшаться при разрешении меньше 600px
padding: clm_px(20, 600, 30);
*/



// Адаптивна властивість (clamp)
@mixin adaptiveValue($property, $startSize, $minSize, $keepSize: 0, $widthFrom: $containerWidth, $widthTo: $minWidth) {
	@if ($startSize==0) {
		$startSize: 0.000001;
	}
	@if ($minSize==0) {
		$minSize: 0.000001;
	}

	// Для calc();
	$addSize: math.div($startSize - $minSize, 16);

	@if ($widthFrom == $containerWidth and $contentWidth == 0) {
		$widthFrom: $templateWidth;
	}

	// Брейк-поїнти в EM
	$widthFromMedia: $widthFrom;
	$widthToMedia: $widthTo;

	// Формула плаваючого значення
	// Источник: https://css-tricks.com/linearly-scale-font-size-with-css-clamp-based-on-the-viewport/
	$slope: math.div(($startSize - $minSize), ($widthFrom - $widthTo));
	$yIntersection: -$widthTo * $slope + $minSize;
	@if ($yIntersection==0) {
		$yIntersection: 0.000001;
	}
	$flyValue: #{$yIntersection}" + " #{$slope * 100}vw;

	// Отримання значення властивості
	$propertyValue: #{"clamp(" $minSize "," $flyValue "," $startSize ")"};
	// Якщо негативні значення
	@if ($minSize > $startSize) {
		$propertyValue: #{"clamp(" $startSize "," $flyValue "," $minSize ")"};
	}

	// Встановлюємо значення за замовчуванням
	@if $keepSize != 1 and $keepSize != 3 {
		@media (min-width: $widthFromMedia) {
			#{$property}: $startSize;
		}
	}
	// Адаптуємо розмір у проміжку між зазначеними ширинами в'юпорту
	@media (min-width: $widthToMedia) and (max-width: $widthFromMedia) {
		#{$property}: $propertyValue;

		// Якщо підтримується clamp();
		//@supports (#{$property}: $propertyValue) {
		//	#{$property}: $propertyValue;
		//}
		// Якщо не підтримується clamp();
		//@supports not (#{$property}: $propertyValue) {
		//	#{$property}: calc(#{toRem($minSize)} + #{$addSize} * (100vw - #{toRem($widthTo)}) / #{math.div($widthFrom, 16) - math.div($widthTo, 16)});
		//}
	}
	@if $keepSize != 1 and $keepSize != 2 {
		@media (max-width: $widthToMedia) {
			#{$property}: $minSize;
		}
	}
}








